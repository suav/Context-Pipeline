{
  "permissions": {
    "allow": [
      "Bash(npm install)",
      "Bash(npm run build:*)",
      "Bash(npm install:*)",
      "Bash(node:*)",
      "Bash(curl:*)",
      "Bash(apt list:*)",
      "Bash(sudo apt-get:*)",
      "Bash(sudo apt-get install:*)",
      "Bash(npm uninstall:*)",
      "Bash(rm:*)",
      "Bash(true)",
      "Bash(git checkout:*)",
      "Bash(git push:*)",
      "Bash(find:*)",
      "Bash(chmod:*)",
      "Bash(git branch:*)",
      "Bash(for branch in feature/permissions-system feature/checkpoint-system feature/git-operations feature/context-import feature/ui-improvements)",
      "Bash(do echo \"=== $branch ===\")",
      "Bash(git log:*)",
      "Bash(echo)",
      "Bash(done)",
      "Bash(mkdir:*)",
      "Bash(grep:*)",
      "Bash(git add:*)",
      "Bash(git fetch:*)",
      "Bash(lsof:*)",
      "Bash(pkill:*)",
      "Bash(kill:*)",
      "Bash(git restore:*)",
      "Bash(npm run dev:*)",
      "Bash(NODE_ENV=test node -e \"\nconst { NextRequest, NextResponse } = require('next/server');\nconst path = require('path');\n\n// Test the workspace creation directly\nconst testWorkspaceCreation = async () => {\n  try {\n    // Mock request\n    const body = {\n      action: 'publish',\n      workspaceDraft: {\n        id: 'test-permission-system',\n        name: 'Test Permission System',\n        description: 'Testing permission injection system',\n        context_items: [{\n          id: 'test-item-1',\n          title: 'Test Context Item',\n          source: 'jira',\n          preview: 'This is a test context item',\n          metadata: {}\n        }]\n      }\n    };\n\n    // Set up test path\n    const WORKSPACE_BASE_DIR = path.join(process.cwd(), 'storage', 'workspaces');\n    const workspacePath = path.join(WORKSPACE_BASE_DIR, 'test-permission-system');\n    \n    console.log('Testing workspace creation...');\n    console.log('Workspace path:', workspacePath);\n    console.log('Request body:', JSON.stringify(body, null, 2));\n    \n    console.log('✅ Test setup successful - API should work when server is running');\n    \n  } catch (error) {\n    console.error('❌ Test failed:', error);\n  }\n};\n\ntestWorkspaceCreation();\n\")",
      "Bash(ls:*)",
      "Bash(sed:*)",
      "Bash(npx tsc:*)",
      "Bash(timeout 10 npm run dev:*)",
      "Bash(awk:*)",
      "Bash(timeout 30 npm run dev:*)",
      "Bash(mv:*)",
      "Bash(rg:*)",
      "Bash(pgrep:*)",
      "Bash(cat:*)",
      "Bash(git commit:*)",
      "Bash(git config:*)",
      "Bash(timeout 10s npm run dev)"
    ],
    "deny": []
  }
}