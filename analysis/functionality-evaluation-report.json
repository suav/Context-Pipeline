{
  "timestamp": "2025-07-08T02:46:43.871Z",
  "branches": {
    "feature/permissions-system": {
      "branch": "feature/permissions-system",
      "features": {
        "permission-injection": {
          "name": "Permission injection on agent instantiation",
          "status": "working",
          "score": 100,
          "details": [
            "AgentService has permission injection methods",
            "Permission and command integration found",
            "Global configuration file exists"
          ],
          "issues": [],
          "weight": 30
        },
        "claude-md-generation": {
          "name": "CLAUDE.md generation for workspaces",
          "status": "working",
          "score": 100,
          "details": [
            "CLAUDE.md template exists",
            "CLAUDE.md generation logic implemented",
            "Workspace context integration found"
          ],
          "issues": [],
          "weight": 25
        },
        "global-config": {
          "name": "Global configuration management",
          "status": "working",
          "score": 100,
          "details": [
            "Global config file exists",
            "Config includes permissions/commands",
            "Config properly exports configuration",
            "Config API endpoint exists"
          ],
          "issues": [],
          "weight": 20
        },
        "tool-approval": {
          "name": "Tool approval overlay",
          "status": "partial",
          "score": 60,
          "details": [
            "Tool approval overlay component exists"
          ],
          "issues": [],
          "weight": 15
        },
        "command-library": {
          "name": "Command library integration",
          "status": "partial",
          "score": 50,
          "details": [
            "Command library file exists"
          ],
          "issues": [],
          "weight": 10
        }
      },
      "metrics": {
        "totalFeatures": 5,
        "workingFeatures": 3,
        "partialFeatures": 2,
        "brokenFeatures": 0,
        "missingFeatures": 0,
        "functionalityScore": 148
      },
      "buildStatus": "success",
      "testResults": {},
      "recommendations": [
        {
          "priority": "MEDIUM",
          "message": "2 features are partially implemented",
          "action": "Complete partial feature implementations"
        }
      ]
    },
    "feature/checkpoint-system": {
      "branch": "feature/checkpoint-system",
      "features": {
        "checkpoint-save": {
          "name": "Checkpoint save functionality",
          "status": "working",
          "score": 100,
          "details": [
            "CheckpointManager exists",
            "Checkpoint save functionality implemented",
            "Conversation and metadata handling found"
          ],
          "issues": [],
          "weight": 30
        },
        "checkpoint-restore": {
          "name": "Checkpoint restore functionality",
          "status": "working",
          "score": 100,
          "details": [
            "CheckpointManager exists",
            "Checkpoint restore functionality implemented",
            "Session state handling found"
          ],
          "issues": [],
          "weight": 30
        },
        "checkpoint-storage": {
          "name": "Checkpoint storage management",
          "status": "working",
          "score": 100,
          "details": [
            "CheckpointStorage exists",
            "Storage save/load methods implemented",
            "Storage implementation found"
          ],
          "issues": [],
          "weight": 20
        },
        "checkpoint-metadata": {
          "name": "Checkpoint metadata and tagging",
          "status": "working",
          "score": 70,
          "details": [
            "Checkpoint types file exists",
            "Metadata and tagging types defined"
          ],
          "issues": [],
          "weight": 10
        },
        "expert-library": {
          "name": "Expert agent library",
          "status": "working",
          "score": 80,
          "details": [
            "Expert library functionality found",
            "Search/filter capabilities found"
          ],
          "issues": [],
          "weight": 10
        }
      },
      "metrics": {
        "totalFeatures": 5,
        "workingFeatures": 5,
        "partialFeatures": 0,
        "brokenFeatures": 0,
        "missingFeatures": 0,
        "functionalityScore": 160
      },
      "buildStatus": "success",
      "testResults": {},
      "recommendations": []
    },
    "feature/git-operations": {
      "branch": "feature/git-operations",
      "features": {
        "branch-management": {
          "name": "Git branch management",
          "status": "working",
          "score": 100,
          "details": [
            "BranchManager service exists",
            "Branch creation/switching implemented",
            "Branch listing/deletion implemented",
            "Branch API endpoint exists"
          ],
          "issues": [],
          "weight": 25
        },
        "commit-operations": {
          "name": "Git commit operations",
          "status": "partial",
          "score": 60,
          "details": [
            "Status API exists",
            "Diff API exists"
          ],
          "issues": [
            "Commit API missing"
          ],
          "weight": 25
        },
        "diff-viewing": {
          "name": "Enhanced git diff viewing",
          "status": "working",
          "score": 70,
          "details": [
            "GitDiffViewer component exists",
            "Line-by-line diff viewing implemented"
          ],
          "issues": [],
          "weight": 20
        },
        "status-operations": {
          "name": "Git status operations",
          "status": "working",
          "score": 100,
          "details": [
            "Git status API exists",
            "Git status implementation found"
          ],
          "issues": [],
          "weight": 15
        },
        "remote-operations": {
          "name": "Remote git operations",
          "status": "working",
          "score": 100,
          "details": [
            "Push/pull operations found",
            "Remote repository handling found",
            "Fetch/merge operations found"
          ],
          "issues": [],
          "weight": 15
        }
      },
      "metrics": {
        "totalFeatures": 5,
        "workingFeatures": 4,
        "partialFeatures": 1,
        "brokenFeatures": 0,
        "missingFeatures": 0,
        "functionalityScore": 154
      },
      "buildStatus": "success",
      "testResults": {},
      "recommendations": [
        {
          "priority": "MEDIUM",
          "message": "1 features are partially implemented",
          "action": "Complete partial feature implementations"
        }
      ]
    },
    "feature/context-import": {
      "branch": "feature/context-import",
      "features": {
        "file-import": {
          "name": "File import functionality",
          "status": "working",
          "score": 100,
          "details": [
            "FileImporter exists",
            "File import functionality implemented",
            "File validation/processing found"
          ],
          "issues": [],
          "weight": 25
        },
        "text-import": {
          "name": "Text import functionality",
          "status": "working",
          "score": 100,
          "details": [
            "TextImporter exists",
            "Text import functionality implemented"
          ],
          "issues": [],
          "weight": 20
        },
        "email-import": {
          "name": "Email import framework",
          "status": "working",
          "score": 100,
          "details": [
            "EmailImporter exists",
            "Email types defined",
            "EmailProcessor service exists"
          ],
          "issues": [],
          "weight": 20
        },
        "enhanced-jira": {
          "name": "Enhanced JIRA integration",
          "status": "working",
          "score": 70,
          "details": [
            "Advanced JIRA templates exist",
            "Template/customization support found"
          ],
          "issues": [],
          "weight": 20
        },
        "email-processor": {
          "name": "Email processing service",
          "status": "working",
          "score": 100,
          "details": [
            "EmailProcessor service exists",
            "Email processing functionality implemented",
            "Email parsing/extraction found"
          ],
          "issues": [],
          "weight": 15
        }
      },
      "metrics": {
        "totalFeatures": 5,
        "workingFeatures": 5,
        "partialFeatures": 0,
        "brokenFeatures": 0,
        "missingFeatures": 0,
        "functionalityScore": 160
      },
      "buildStatus": "success",
      "testResults": {},
      "recommendations": []
    },
    "feature/ui-improvements": {
      "branch": "feature/ui-improvements",
      "features": {
        "monaco-enhancement": {
          "name": "Monaco editor enhancements",
          "status": "working",
          "score": 70,
          "details": [
            "MonacoEditorArea component exists",
            "Theme/configuration support found"
          ],
          "issues": [
            "No enhancement features detected"
          ],
          "weight": 25
        },
        "file-tree-improvement": {
          "name": "File tree improvements",
          "status": "working",
          "score": 70,
          "details": [
            "FileTree component exists",
            "Context menu integration found"
          ],
          "issues": [
            "No improvement features detected"
          ],
          "weight": 20
        },
        "editor-themes": {
          "name": "Editor themes system",
          "status": "working",
          "score": 100,
          "details": [
            "Editor themes file exists",
            "Theme definitions found"
          ],
          "issues": [],
          "weight": 20
        },
        "file-context-menu": {
          "name": "File context menu",
          "status": "working",
          "score": 100,
          "details": [
            "FileContextMenu component exists",
            "Context menu actions implemented"
          ],
          "issues": [],
          "weight": 15
        },
        "icon-service": {
          "name": "File icon service",
          "status": "working",
          "score": 100,
          "details": [
            "FileIconService exists",
            "File icon mapping implemented"
          ],
          "issues": [],
          "weight": 10
        },
        "editor-config": {
          "name": "Editor configuration manager",
          "status": "working",
          "score": 100,
          "details": [
            "EditorConfigManager exists",
            "Editor configuration functionality implemented"
          ],
          "issues": [],
          "weight": 10
        }
      },
      "metrics": {
        "totalFeatures": 6,
        "workingFeatures": 6,
        "partialFeatures": 0,
        "brokenFeatures": 0,
        "missingFeatures": 0,
        "functionalityScore": 160
      },
      "buildStatus": "success",
      "testResults": {},
      "recommendations": []
    }
  },
  "overall": {
    "totalFeatures": 26,
    "workingFeatures": 23,
    "brokenFeatures": 0,
    "missingFeatures": 0,
    "functionalityScore": 156.4
  },
  "featureMatrix": {
    "feature/permissions-system": {
      "name": "Permissions & Commands System",
      "expectedFeatures": [
        {
          "id": "permission-injection",
          "name": "Permission injection on agent instantiation",
          "testMethod": "checkPermissionInjection",
          "weight": 30
        },
        {
          "id": "claude-md-generation",
          "name": "CLAUDE.md generation for workspaces",
          "testMethod": "checkClaudeMdGeneration",
          "weight": 25
        },
        {
          "id": "global-config",
          "name": "Global configuration management",
          "testMethod": "checkGlobalConfig",
          "weight": 20
        },
        {
          "id": "tool-approval",
          "name": "Tool approval overlay",
          "testMethod": "checkToolApproval",
          "weight": 15
        },
        {
          "id": "command-library",
          "name": "Command library integration",
          "testMethod": "checkCommandLibrary",
          "weight": 10
        }
      ]
    },
    "feature/checkpoint-system": {
      "name": "Agent Checkpoint System",
      "expectedFeatures": [
        {
          "id": "checkpoint-save",
          "name": "Checkpoint save functionality",
          "testMethod": "checkCheckpointSave",
          "weight": 30
        },
        {
          "id": "checkpoint-restore",
          "name": "Checkpoint restore functionality",
          "testMethod": "checkCheckpointRestore",
          "weight": 30
        },
        {
          "id": "checkpoint-storage",
          "name": "Checkpoint storage management",
          "testMethod": "checkCheckpointStorage",
          "weight": 20
        },
        {
          "id": "checkpoint-metadata",
          "name": "Checkpoint metadata and tagging",
          "testMethod": "checkCheckpointMetadata",
          "weight": 10
        },
        {
          "id": "expert-library",
          "name": "Expert agent library",
          "testMethod": "checkExpertLibrary",
          "weight": 10
        }
      ]
    },
    "feature/git-operations": {
      "name": "Git Flow Integration",
      "expectedFeatures": [
        {
          "id": "branch-management",
          "name": "Git branch management",
          "testMethod": "checkBranchManagement",
          "weight": 25
        },
        {
          "id": "commit-operations",
          "name": "Git commit operations",
          "testMethod": "checkCommitOperations",
          "weight": 25
        },
        {
          "id": "diff-viewing",
          "name": "Enhanced git diff viewing",
          "testMethod": "checkDiffViewing",
          "weight": 20
        },
        {
          "id": "status-operations",
          "name": "Git status operations",
          "testMethod": "checkStatusOperations",
          "weight": 15
        },
        {
          "id": "remote-operations",
          "name": "Remote git operations",
          "testMethod": "checkRemoteOperations",
          "weight": 15
        }
      ]
    },
    "feature/context-import": {
      "name": "Context Enhancement",
      "expectedFeatures": [
        {
          "id": "file-import",
          "name": "File import functionality",
          "testMethod": "checkFileImport",
          "weight": 25
        },
        {
          "id": "text-import",
          "name": "Text import functionality",
          "testMethod": "checkTextImport",
          "weight": 20
        },
        {
          "id": "email-import",
          "name": "Email import framework",
          "testMethod": "checkEmailImport",
          "weight": 20
        },
        {
          "id": "enhanced-jira",
          "name": "Enhanced JIRA integration",
          "testMethod": "checkEnhancedJira",
          "weight": 20
        },
        {
          "id": "email-processor",
          "name": "Email processing service",
          "testMethod": "checkEmailProcessor",
          "weight": 15
        }
      ]
    },
    "feature/ui-improvements": {
      "name": "UI/UX Enhancement",
      "expectedFeatures": [
        {
          "id": "monaco-enhancement",
          "name": "Monaco editor enhancements",
          "testMethod": "checkMonacoEnhancement",
          "weight": 25
        },
        {
          "id": "file-tree-improvement",
          "name": "File tree improvements",
          "testMethod": "checkFileTreeImprovement",
          "weight": 20
        },
        {
          "id": "editor-themes",
          "name": "Editor themes system",
          "testMethod": "checkEditorThemes",
          "weight": 20
        },
        {
          "id": "file-context-menu",
          "name": "File context menu",
          "testMethod": "checkFileContextMenu",
          "weight": 15
        },
        {
          "id": "icon-service",
          "name": "File icon service",
          "testMethod": "checkIconService",
          "weight": 10
        },
        {
          "id": "editor-config",
          "name": "Editor configuration manager",
          "testMethod": "checkEditorConfig",
          "weight": 10
        }
      ]
    }
  }
}